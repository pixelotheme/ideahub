plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.10'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}


group = 'ideaboard'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


//jcenter 에서 받는것도 괜찮다
repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
	//devtools - 서버 처음 돌릴때부터 restart로 실행시킨다
	//개발단계에서 html 에서 캐싱을 안해줘서 서버 재시작 안해도 변경된것을 바로 확인 가능하다
	implementation 'org.springframework.boot:spring-boot-devtools'
	// 쿼리
	implementation("com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6")
	//롬복
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//스프링 시큐리티 oauth-client, jose 를 기본으로 관리해준다
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	//세션 저장소 DB 연결을 위한 의존성 추가
	implementation 'org.springframework.session:spring-session-jdbc'
	// 스프링 시큐리티 테스트를 위한 의존성 추가
	implementation 'org.springframework.security:spring-security-test'
	//테스트용 h2
	implementation 'com.h2database:h2:1.4.200'
}

tasks.named('test') {
	useJUnitPlatform()
}

//plain.jar 생성 막기
jar{
	enabled = false
}